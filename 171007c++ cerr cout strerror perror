c++ cerr cout strerror perror

cout：写到标准输出的ostream对象；
cerr：输出到标准错误的ostream对象，常用于程序错误信息；

1、cout经过缓冲后输出，默认情况下是显示器。这是一个被缓冲的输出，是标准输出，并且可以重新定向（关于重新定向的意思可以参考下面的例子）；
2、cerr不经过缓冲而直接输出，一般用于迅速输出出错信息，是标准错误，默认情况下被关联到标准输出流，但它不被缓冲，也就说错误消息可以直接发送到显示器，而无需等到缓冲区或者新的换行符时，才被显示。一般情况下不被重定向

strerror（）方法与perror()的用法十分相似。

对于perror（）的用法，这个方法用于将上一条语句（方法）执行后的错误打印到标准输出上。一般情况下（没有使用重定向的话），就是输出到控制台上。
但是，如果我需要了解另外一个进程的某一个方法执行的错误，或者更briefly，我就希望将错误打印到一个文件里面，perror()就不太合适了！
为了实现我刚刚说到的要求，我们首先要将错误放到一个字符串里面。这个时候，strerror（）就合适了！

strerror(errno)
首先，系统会根据上一条语句的执行错误情况，将errno赋值.。关于这点，我们首先明白两点。第一，errno是一个系统变量，是不需要我们赋值或者声明的。第二，errno是一个int类型的变量，而且其中的值对应一种特定错误类型

然后，关于streorror（）本身，可以这么理解。顾名思义，streorror=string+error，就是将errno值翻译成描述错误类型的string语句！



